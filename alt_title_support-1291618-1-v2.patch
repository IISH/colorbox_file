diff --git a/colorbox_file.module b/colorbox_file.module
index 033f094..0c31030 100644
--- a/colorbox_file.module
+++ b/colorbox_file.module
@@ -14,11 +14,13 @@ function colorbox_file_theme() {
     // file.module.
     'file_colorbox' => array(
       'variables' => array(
-        'file' => NULL, 
+        'item' => NULL, 
         'icon_directory' => NULL, 
         'styles_overrides' => NULL, 
         'colorbox_node_style' => NULL,
         'colorbox_image_style' => NULL,
+        'colorbox_alt_field' => NULL,
+        'colorbox_title_field' => NULL,
        ),
     ),
   );
@@ -33,7 +35,12 @@ function colorbox_file_field_formatter_info() {
     'file_colorbox' => array(
       'label' => t('Colorbox file'),
       'field types' => array('file'),
-      'settings' => array('colorbox_node_style' => '', 'colorbox_image_style' => ''),
+      'settings' => array(
+        'colorbox_node_style' => '', 
+        'colorbox_image_style' => '', 
+        'colorbox_alt_field' => '', 
+        'colorbox_title_field' => '',
+      ),
     ),
   );
 }
@@ -61,6 +68,30 @@ function colorbox_file_field_formatter_settings_form($field, $instance, $view_mo
     '#options' => $image_styles,
   );
 
+
+  $field_instances = field_info_instances('file', 'image');
+
+  // Generate an associative array used for options
+  $fields = array();
+  foreach ($field_instances as $key => $value) {
+    $fields[$key] = $value['label'];
+  }
+  
+  $element['colorbox_alt_field'] = array(
+    '#title' => t('Colorbox alt field'),
+    '#type' => 'select',
+    '#default_value' => $settings['colorbox_alt_field'],
+    '#empty_option' => t('None'),
+    '#options' => $fields,
+  );
+  $element['colorbox_title_field'] = array(
+    '#title' => t('Colorbox title field'),
+    '#type' => 'select',
+    '#default_value' => $settings['colorbox_title_field'],
+    '#empty_option' => t('None'),
+    '#options' => $fields,
+  );
+
   return $element;
 }
 
@@ -99,20 +130,47 @@ function colorbox_file_field_formatter_settings_summary($field, $instance, $view
  * Implements hook_field_formatter_view().
  */
 function colorbox_file_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
+  
   $element = array();
   switch ($display['type']) {
     case 'file_colorbox':
+      // @todo Is this still relevant?
       $styles_overrides = array();
       if (isset($entity->override)) {
         $styles_overrides = $entity->override;
       }
+
       foreach ($items as $delta => $item) {
+        // Hide the label and show field as plain text
+        $field_display = array('label' => 'hidden', 'type' => 'text_plain');
+
+        $field_values = array();
+
+        // Loop through fields used by colorbox
+        foreach(array('colorbox_alt_field', 'colorbox_title_field') as $colorbox_field) {
+
+          // Media browser doesnt supply these
+          if (!empty($display['settings'][$colorbox_field])) {
+
+            // The field value to display
+            $field_item = field_get_items($entity_type, $entity, $display['settings'][$colorbox_field], $langcode);
+
+            // Get a render array of the field value
+            $field_values[$colorbox_field] = field_view_value($entity_type, $entity, $display['settings'][$colorbox_field], $field_item[0], $field_display, $langcode);
+          }
+          else {
+            $field_values[$colorbox_field] = "";
+          }
+        }
+
         $element[$delta] = array(
           '#theme' => 'file_colorbox',
-          '#file' => (object) $item,
+          '#item' => $item,
           '#styles_overrides' => $styles_overrides,
           '#colorbox_node_style' => $display['settings']['colorbox_node_style'],
           '#colorbox_image_style' => $display['settings']['colorbox_image_style'],
+          '#colorbox_alt_field' => drupal_render($field_values['colorbox_alt_field']),
+          '#colorbox_title_field' => drupal_render($field_values['colorbox_title_field']),
         );
       }
       break;
@@ -135,9 +193,10 @@ function colorbox_file_field_formatter_view($entity_type, $entity, $field, $inst
 function theme_file_colorbox($variables) {
   $output = '';
   
-  $file = $variables['file'];
+  $file = $variables['item'];
   $icon_directory = $variables['icon_directory'];
   
+  // @todo, clean up and check relevance of styles overrides
   $attributes = array();
   if (isset($variables['styles_overrides']['style'])) {
     $attributes['style'] = $variables['styles_overrides']['style'];
@@ -146,13 +205,22 @@ function theme_file_colorbox($variables) {
   if (isset($variables['styles_overrides']['title'])) {
     $title = $variables['styles_overrides']['title'];
   }
+  if (isset($variables['colorbox_title_field'])) {
+    $title = $variables['colorbox_title_field'];
+  }
+
   $alt = '';
   if (isset($variables['styles_overrides']['alt'])) {
     $alt = $variables['styles_overrides']['alt'];
   }
-  if($file->type == 'image') {
+  if (isset($variables['colorbox_alt_field'])) {
+    $alt = $variables['colorbox_alt_field'];
+  }
+
+  // @todo Add gid support
+  if($file['type'] == 'image') {
     $image = array(
-      'path' => $file->uri,
+      'path' => $file['uri'],
       'alt' => $alt,
       'title' => $title,
       'style_name' => $variables['colorbox_node_style'],
